<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
       default-lazy-init="false">

    <aop:aspectj-autoproxy/>

    <!--开启自动扫描 自动注入相应BeanPostProcessor-->
    <context:component-scan base-package="com.eric.general"/>

    <!-- 初始化配置信息 对PropertyPlaceholderConfigurer进行自定义扩展-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>

    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="5"/>
        <property name="maxPoolSize" value="10"/>
        <property name="WaitForTasksToCompleteOnShutdown" value="true"/>
    </bean>


    <!--开启mvc-->
    <mvc:annotation-driven/>


    <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="maxUploadSize" value="10485760"/>
        <property name="maxInMemorySize" value="1048576"/>
    </bean>


    <!--SpringMvc防重复提交拦截器-->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
        <property name="interceptors">
            <list>
                <bean class="com.eric.general.core.interceptor.AvoidDuplicateSubmissionInterceptor"/>
            </list>
        </property>
    </bean>


    <bean id="voteService" class="com.eric.general.service.impl.VoteServiceImpl"/>
    <bean id="xmlLogAdvice" class="com.eric.general.core.aop.XmlLogAdvice"/>
    <aop:config>
        <aop:aspect id="aspect" ref="xmlLogAdvice">
            <aop:pointcut id="pointVoteUser" expression="execution(* com.eric.general.service.impl.*.getAll*(..))"/>
            <aop:before method="doBefore" pointcut-ref="pointVoteUser"/>
            <aop:around method="doAround" pointcut-ref="pointVoteUser"/>
            <aop:after method="doAfter" pointcut-ref="pointVoteUser"/>
            <aop:after-returning method="doReturn" pointcut-ref="pointVoteUser"/>
            <aop:after-throwing method="doThrowing" throwing="ex" pointcut-ref="pointVoteUser"/>
        </aop:aspect>
    </aop:config>


    <!--引入外部文件-->
    <import resource="dataSourceConfig.xml"/>

</beans>